# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

orbs:
  snyk: snyk/snyk@0.0.8

commands:
  test:
    parameters:
      toxenv:
        type: string
    steps:
    - run:
        name: Test
        command: |
            PATH=$PATH:~/.local/bin
            pip install --user tox
            AWS_DEFAULT_REGION=eu-west-2 ~/.local/bin/tox -e << parameters.toxenv >>
jobs:
  test_27:
    working_directory: ~/repo
    docker:
    - image: circleci/python:2.7
    steps:
    - checkout
    - test:
        toxenv: py27

  test_37:
    working_directory: ~/repo
    docker:
    - image: circleci/python:3.7
    steps:
    - checkout
    - test:
        toxenv: py37

  build:
    working_directory: ~/repo
    docker:
    - image: circleci/python:3.7
    steps:
    - checkout
    - run:
        name: Bump release version
        command: |
          PATH=$PATH:~/.local/bin
          pip install --user bump2version
          set +o pipefail
          LATEST_VERSION=$(curl --silent "https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/releases/latest" | jq -r '.tag_name // empty')
          set -o pipefail
          [  -z "$LATEST_VERSION" ] && LATEST_VERSION="0.0.0"
          sed -i -e "s/version=\"0.0.0\"/version=\"$LATEST_VERSION\"/" setup.py
          VERSION=$(bump2version minor --allow-dirty --current-version $LATEST_VERSION --list | grep new_version | cut -f2 -d=)
          mkdir -p artifacts
          echo "${VERSION}" > artifacts/VERSION
    - run:
        name: Create dist package
        command: |
          python setup.py sdist --dist-dir artifacts
    - persist_to_workspace:
        root: artifacts
        paths:
        - acm_cert_helper-*.tar.gz
        - VERSION

  snyk-pr:
    docker:
      - image: circleci/python:3.7.1
    steps:
      - checkout
      - run:
          # Snyk is supposed to do this automatically but it doesn't, so we manually install dependencies to be tested
          name: Install dependencies
          command: |
            sudo pip install -r requirements.txt
      - snyk/scan:
          organization: dwp-dataworks
          severity-threshold: high
          target-file: requirements.txt
          project: '${CIRCLE_PROJECT_REPONAME}/pr-kafka-producer'

  snyk-master:
    docker:
      - image: circleci/python:3.7.1
    steps:
      - checkout
      - run:
          # Snyk is supposed to do this automatically but it doesn't, so we manually install dependencies to be tested
          name: Install dependencies
          command: |
            sudo pip install -r requirements.txt
      - snyk/scan:
          organization: dwp-dataworks
          severity-threshold: high
          target-file: requirements.txt
          project: '${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BRANCH}-kafka-producer'

  publish-github-release:
    docker:
    - image: cibuilds/github:0.10
    steps:
    - attach_workspace:
        at: ./artifacts
    - run:
        name: Create GitHub release
        command: |
          VERSION=$(cat ./artifacts/VERSION)
          rm ./artifacts/VERSION
          ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./artifacts/

workflows:
  version: 2
  build-and-deploy:
    jobs:
    - test_27
    - test_37
    - build:
        requires:
        - test_27
        - test_37
    - snyk-pr:
        requires:
          - build
        filters:
          branches:
            ignore: master
    - snyk-master:
        requires:
          - build
        filters:
          branches:
            only: master
    - publish-github-release:
        requires:
        - build
        filters:
          branches:
            only: master
